name: Build and Deploy to GKE

on:
  pull_request:
    types:
      - closed

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: linu-cluster    # Add your cluster name here.
  GKE_ZONE: asia-south1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: python-app # Add your deployment name here.
  IMAGE: python-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker asia-south1-docker.pkg.dev

      - uses: 'google-github-actions/auth@v1'
        with:
          service_account: '${{ secrets.GKE_SA_AC}}'
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Get the GKE credentials so we can deploy to the cluster
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          credentials: ${{ secrets.GKE_SA_KEY }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ secrets.GKE_PROJECT }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:releasev1" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Cloud Registry
      - name: Publish
        run: |-
          docker push "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:releasev1"

      # Check if the pull request is merged to the master branch
      - name: Check PR Merge
        id: check_pr_merge
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ] && [ "${{ github.event.pull_request.base.ref }}" == "master" ]; then
            echo "PR merged to master branch. Proceeding with deployment."
            echo "::set-output name=return-code::1"
          else
            echo "PR not merged to master branch. Skipping deployment."
            echo "::set-output name=return-code::0"
          fi


      # Deploy the Docker image to the GKE cluster if the PR is merged to the master branch
      - name: Deploy
        if: steps.check_pr_merge.outputs.return-code == '1'
        run: |
          sed -i -e 's/GITHUB_SHA/releasev1/' ${{ github.workspace }}/.github/manifests/deployment.yaml
          kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME }}
          # kubectl apply --force -f ${{ github.workspace }}/.github/manifests/deployment.yaml || (echo "Deployment failed" && exit 1)
